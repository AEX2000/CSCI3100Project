{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86181\\\\Desktop\\\\programing\\\\23_24_sem2\\\\Software\\\\project_overall\\\\CSCI3100Project\\\\client\\\\src\\\\pages\\\\Login\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport \"./index.css\";\nimport { PageContext } from '../../components/appPage/pageContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const {\n    login\n  } = useContext(PageContext); // Get the login function provided by PageContext. It will change page context from 0 to 1:HomePage\n  const [username, setUsername] = useState(\"\"); // state(you can treat it as static variable) of Username\n  const [password, setPassword] = useState(\"\"); // state(you can treat it as static variable) of Password\n  const [defaultAccount, setDefaultAccount] = useState(\"\"); // Default account for testing\n\n  const handleSubmit = async event => {\n    // Vox: I'm going to add the basic login here for testing\n    event.preventDefault();\n    console.log('Username:', username);\n    console.log('Password:', password);\n    try {\n      const response = await fetch('http://localhost:9000/Login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password\n        })\n      });\n      if (response.status === 200) {\n        alert('Login Success');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n    login();\n  };\n  useEffect(() => {\n    // Same as testAPI, fetch the default username and password from backend.\n    fetch(\"http://localhost:9000/testLogin\").then(res => res.text()).then(res => setDefaultAccount(res)).catch(err => err);\n  }, []);\n\n  // A form of login\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"You will see the account if the backend and database is set up and started properly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Username\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            value: username,\n            onChange: event => setUsername(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: event => setPassword(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"defaultAccount\",\n      children: defaultAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"MvhQVBiU1qTn95Rx/w2lKOdFVl0=\");\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useContext","useEffect","PageContext","jsxDEV","_jsxDEV","LoginPage","_s","login","username","setUsername","password","setPassword","defaultAccount","setDefaultAccount","handleSubmit","event","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","status","alert","error","then","res","text","catch","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/86181/Desktop/programing/23_24_sem2/Software/project_overall/CSCI3100Project/client/src/pages/Login/index.jsx"],"sourcesContent":["import React,{useState,useContext,useEffect} from 'react';\r\nimport \"./index.css\"\r\nimport {PageContext} from '../../components/appPage/pageContext';\r\n\r\nexport default function LoginPage(){\r\n    const {login} = useContext(PageContext); // Get the login function provided by PageContext. It will change page context from 0 to 1:HomePage\r\n    const [username,setUsername] = useState(\"\"); // state(you can treat it as static variable) of Username\r\n    const [password,setPassword] = useState(\"\"); // state(you can treat it as static variable) of Password\r\n    const [defaultAccount,setDefaultAccount] = useState(\"\"); // Default account for testing\r\n\r\n    const handleSubmit = async(event) => {\r\n        // Vox: I'm going to add the basic login here for testing\r\n        event.preventDefault();\r\n        console.log('Username:',username);\r\n        console.log('Password:',password);\r\n        try{\r\n            const response = await fetch('http://localhost:9000/Login',{\r\n                method: 'POST',\r\n                headers:{\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    username:username,\r\n                    password:password,\r\n                }),\r\n            });\r\n            if (response.status === 200){\r\n                alert('Login Success');\r\n            }\r\n        }catch(error){\r\n            console.error('Error:',error);\r\n        }\r\n        login();\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // Same as testAPI, fetch the default username and password from backend.\r\n        fetch(\"http://localhost:9000/testLogin\")\r\n            .then(res => res.text())\r\n            .then(res => setDefaultAccount(res))\r\n            .catch(err => err)\r\n    },[]);\r\n\r\n    // A form of login\r\n    return(\r\n        <div className=\"loginContainer\">\r\n            <h2>You will see the account if the backend and database is set up and started properly</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label>Username<input\r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    value={username}\r\n                    onChange={(event)=>setUsername(event.target.value)}\r\n                    /></label>\r\n                </div>\r\n                <div>\r\n                    <label>Password\r\n                    <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    value={password}\r\n                    onChange={(event)=>setPassword(event.target.value)}\r\n                    /></label>\r\n                </div>\r\n                <button type=\"submit\">Login</button>\r\n            </form>\r\n            <p className=\"defaultAccount\">{defaultAccount}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}